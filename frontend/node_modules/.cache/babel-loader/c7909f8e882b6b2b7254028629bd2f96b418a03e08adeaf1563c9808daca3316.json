{"ast":null,"code":"var _jsxFileName = \"/Users/martinmitrov/Downloads/InstagramFollowerCount-master/instagram-follower-counter-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header';\nimport FileUpload from './components/FileUpload';\nimport InstagramTable from './components/InstagramTable';\nimport JsonUpload from './components/JsonUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nonFollowingUsers, setNonFollowingUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch initial data if available (for returning users)\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/');\n      // This assumes your backend returns the data in the expected format\n      // You might need to adjust based on your actual API response\n      if (response.data && response.data.difference) {\n        setNonFollowingUsers(response.data.difference);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleUploadSuccess = () => {\n    setLoading(true);\n    setMessage('Processing your data...');\n\n    // Wait briefly then fetch results\n    setTimeout(() => {\n      fetchData();\n      setLoading(false);\n      setMessage('Analysis complete!');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }, 1500);\n  };\n  const handleError = errorMsg => {\n    setMessage(errorMsg);\n    setLoading(false);\n\n    // Clear error message after 5 seconds\n    setTimeout(() => {\n      setMessage('');\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n        onSuccess: handleUploadSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"or-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(JsonUpload, {\n        onSuccess: handleUploadSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your Instagram data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(InstagramTable, {\n      nonFollowingUsers: nonFollowingUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PF1CZlmuy+vkRLlwzh9QJr6SrrE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","FileUpload","InstagramTable","JsonUpload","jsxDEV","_jsxDEV","App","_s","nonFollowingUsers","setNonFollowingUsers","loading","setLoading","message","setMessage","fetchData","response","get","data","difference","error","console","handleUploadSuccess","setTimeout","handleError","errorMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","includes","_c","$RefreshReg$"],"sources":["/Users/martinmitrov/Downloads/InstagramFollowerCount-master/instagram-follower-counter-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header';\nimport FileUpload from './components/FileUpload';\nimport InstagramTable from './components/InstagramTable';\nimport JsonUpload from './components/JsonUpload';\n\nfunction App() {\n  const [nonFollowingUsers, setNonFollowingUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  \n  useEffect(() => {\n    // Fetch initial data if available (for returning users)\n    fetchData();\n  }, []);\n  \n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/');\n      // This assumes your backend returns the data in the expected format\n      // You might need to adjust based on your actual API response\n      if (response.data && response.data.difference) {\n        setNonFollowingUsers(response.data.difference);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  \n  const handleUploadSuccess = () => {\n    setLoading(true);\n    setMessage('Processing your data...');\n    \n    // Wait briefly then fetch results\n    setTimeout(() => {\n      fetchData();\n      setLoading(false);\n      setMessage('Analysis complete!');\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }, 1500);\n  };\n  \n  const handleError = (errorMsg) => {\n    setMessage(errorMsg);\n    setLoading(false);\n    \n    // Clear error message after 5 seconds\n    setTimeout(() => {\n      setMessage('');\n    }, 5000);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Header />\n      \n      <div className=\"upload-section\">\n        <FileUpload \n          onSuccess={handleUploadSuccess} \n          onError={handleError}\n        />\n        \n        <div className=\"or-divider\">\n          <span>OR</span>\n        </div>\n        \n        <JsonUpload \n          onSuccess={handleUploadSuccess} \n          onError={handleError}\n        />\n      </div>\n      \n      {message && (\n        <div className={`message ${message.includes('Error') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n      \n      {loading ? (\n        <div className=\"loading-spinner\">\n          <div className=\"spinner\"></div>\n          <p>Processing your Instagram data...</p>\n        </div>\n      ) : (\n        <InstagramTable nonFollowingUsers={nonFollowingUsers} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}