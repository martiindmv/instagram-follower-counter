{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API requests - adjust if your Spring Boot runs on a different port\nconst API_BASE_URL = 'http://localhost:8080';\n\n// Configure axios for all requests\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Get the list of users who don't follow back\nexport const getNonFollowingUsers = async () => {\n  try {\n    const response = await api.get('/api/not-following-back');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching non-following users:', error);\n    throw error;\n  }\n};\n\n// Upload followers file\nexport const uploadFollowersFile = async file => {\n  const formData = new FormData();\n  formData.append('followers', file);\n  try {\n    const response = await api.post('/uploadFollowers', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading followers file:', error);\n    throw error;\n  }\n};\n\n// Upload following file\nexport const uploadFollowingFile = async file => {\n  const formData = new FormData();\n  formData.append('following', file);\n  try {\n    const response = await api.post('/uploadFollowing', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading following file:', error);\n    throw error;\n  }\n};\n\n// Upload JSON data directly\nexport const uploadJsonText = async (jsonFollowers, jsonFollowing) => {\n  try {\n    const response = await api.post('/uploadStringFormat', {\n      jsonFollowers,\n      jsonFollowing\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading JSON text:', error);\n    throw error;\n  }\n};\nexport default {\n  getNonFollowingUsers,\n  uploadFollowersFile,\n  uploadFollowingFile,\n  uploadJsonText\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","getNonFollowingUsers","response","get","data","error","console","uploadFollowersFile","file","formData","FormData","append","post","uploadFollowingFile","uploadJsonText","jsonFollowers","jsonFollowing"],"sources":["/Users/martinmitrov/Downloads/InstagramFollowerCount-master/instagram-follower-counter-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for API requests - adjust if your Spring Boot runs on a different port\nconst API_BASE_URL = 'http://localhost:8080';\n\n// Configure axios for all requests\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Get the list of users who don't follow back\nexport const getNonFollowingUsers = async () => {\n  try {\n    const response = await api.get('/api/not-following-back');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching non-following users:', error);\n    throw error;\n  }\n};\n\n// Upload followers file\nexport const uploadFollowersFile = async (file) => {\n  const formData = new FormData();\n  formData.append('followers', file);\n  \n  try {\n    const response = await api.post('/uploadFollowers', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading followers file:', error);\n    throw error;\n  }\n};\n\n// Upload following file\nexport const uploadFollowingFile = async (file) => {\n  const formData = new FormData();\n  formData.append('following', file);\n  \n  try {\n    const response = await api.post('/uploadFollowing', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading following file:', error);\n    throw error;\n  }\n};\n\n// Upload JSON data directly\nexport const uploadJsonText = async (jsonFollowers, jsonFollowing) => {\n  try {\n    const response = await api.post('/uploadStringFormat', {\n      jsonFollowers,\n      jsonFollowing\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading JSON text:', error);\n    throw error;\n  }\n};\n\nexport default {\n  getNonFollowingUsers,\n  uploadFollowersFile,\n  uploadFollowingFile,\n  uploadJsonText\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,yBAAyB,CAAC;IACzD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EACjD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,IAAI,CAAC;EAElC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,EAAE;MAC5DT,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,mBAAmB,GAAG,MAAOL,IAAI,IAAK;EACjD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,IAAI,CAAC;EAElC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,EAAE;MAC5DT,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAOC,aAAa,EAAEC,aAAa,KAAK;EACpE,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,GAAG,CAACe,IAAI,CAAC,qBAAqB,EAAE;MACrDG,aAAa;MACbC;IACF,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAe;EACbJ,oBAAoB;EACpBM,mBAAmB;EACnBM,mBAAmB;EACnBC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}